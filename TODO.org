* TODO [1/6]
  - [X] Port already done [9/9]
    - [X] Create Boilerplate
    - [X] Set up linting
    - [X] Set up typechecking
    - [X] Set up test
    - [X] Set up setup.cfg
    - [X] Clean previous env
    - [X] Open current env
    - [X] Adds util
    - [X] Adds rest

  - [ ] Add explorations notebook:
    - [ ] Maybe monad
    - [ ] Tree functor
    - [ ] Either monad
    - [ ] Functor
    - [ ] Monad

  - [ ] Add some test [0/2]
    - [ ] Checkout dataclass github tests
    - [ ] Checkout attrs github tests

  - [ ] Add full signature support [0/3]
    - [ ] New mechanism of ctors creating by parts [0/4]
      - [ ] 1 - String-represented types evaluation (how mypy does it?)
        eg:
        @dataype
        class Tree(Generic[A]):
            Leaf : (A,)
            Node : ('Tree[A]', 'Tree[A]')
      - [ ] 2 - Signature parsing
        eg: (A, A) -> <Signature (_0: ~A, _1: ~A)>
      - [ ] 3 - Metadata creation
        eg: __signature__ and __annotations__
      - [ ] type creation
    - [ ] Flexible __repr__
    - [ ] Convenience `signature` and `parameter` functions [0/2]
      - [ ] decide interface
      - [ ] implement

  - [ ] Add experimental 'expose' functionality (is this too hacky?)
  - [ ] Try to play nice with mypy
